@typeparam T

@if (table?.Items is not null && table?.Columns is not null)
{
    <div>
        @if(table?.TableActions is not null)
        {
            @foreach(var action in table.TableActions)
            {
                @if(action?.Action is not null)
                {
                    <a @onclick=@(_ => action.Action(table.Items))>
                        <span class="oi oi-@action.Icon" aria-hidden="true"></span>
                    </a>
                }
            }
        }
    </div>
    <table class="table">
        <thead>
            <tr>
                @foreach (var col in table.Columns)
                {
                    <th>@col.Header</th>        
                }
                @if(table?.RowActions is not null)
                {
                    <th>Actions</th>
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var item in table.Items)
            {
                <tr>
                    @foreach (var col in table.Columns)
                    {
                        <td>@col.Value(item)</td>        
                    }
                    @if(table?.RowActions is not null)
                    {
                        @foreach(var action in table.RowActions)
                        {
                            <td>
                                @if(action?.Action is not null)
                                {
                                    <a href="#" @onclick=@(_ => action.Action(item))>
                                        <span class="@action.Icon" aria-hidden="true"></span>
                                    </a>
                                }
                            </td>
                        }
                    }
                </tr>
            }
        </tbody>
    </table>
}

@code {
    [Parameter] public TableDefinition<T>? table { get; set; }

}
